/*the following code allows us to preload an image to avoid the flicker*/
body:after {
    content:url(/Fergus/static_pages/images/alsatian-modified.jpg);
    /* 
    the following lines cause the image to be unseen even though it's been
    preloaded
    */
    position:absolute;
    width: 0;
    height: 0;
    overflow: hidden;
    z-index:-1;

}

/*
float is allowing us to put things next to eachother
this is not the modern way to do this but it's one simple way 
*/

.Page2Para1 {
    color:darkgoldenrod;
    float:left;
}

.Page2Para2 {
    color:black;
    float:left;
}
.test2-div {
    
    width: 200px;
    height:100px;
    background-color: rgb(155, 46, 46);
}
.long-div {
    width: 100%;
    height:100px;
    background-color: black;
}
.image {
    width:500px;
    height:500px;
    background-image: url(/Fergus/static_pages/images/alsatian.jpg);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    
}

/*  
The ':hover' tells you what to add to the .image when the mouse is hovering
over it. There's a flicker when you first hover since this is the browser
loading the image in. You can get around this by preloading the image, which
is done at the top of the stylesheet.

*/
.image:hover {
        background-image: url(/Fergus/static_pages/images/alsatian-modified.jpg);
}
body {
    background-color: #1e1e1e;
}

/* position = static is the
default. 
- static: 
normal linear flow of the page.

- relative:
is positioned relative to its normal position.

Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away 
from its normal position. Other content will not be adjusted to fit into any gap left by the element

- fixed: 
is positioned relative to the viewport, which means it always stays in the 
same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.


absolute: 
An element with position: absolute; is positioned relative to the nearest positioned ancestor (instead of 
positioned relative to the viewport, like fixed).

However; if an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with 
page scrolling.
*/
.position-div {
    position:sticky;

    right: 0px;
    top: 50px;
    height: 100px;
    width: 100px;
    background-color: blue;   
    /* z-index controls what's infront */
    z-index: 100;
}
.position-div2 {
    position: absolute;
    height: 200%;
    width: 500px;
    background-color: red;   
    z-index: 50;
}
